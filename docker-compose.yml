services:
  db:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "admin"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "wb-tech-test-assignment"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis:8.2.1
    container_name: redis
    environment:
      - REDIS_PASSWORD=admin
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "admin", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9020:8080"
    depends_on:
      - broker
    environment:
      AUTH_TYPE: "DISABLED"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092

  wb-tech-test-assignment:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: wb-tech-test-assignment
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      broker:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./config/config.docker.yml:/app/config/config.docker.yml
    environment:
      CONFIG_PATH: "/app/config/config.docker.yml"

volumes:
  postgres_data:
  redis_data:
